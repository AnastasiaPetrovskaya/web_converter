<?xml version="1.0" encoding="UTF-8"?>
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
>

  <bean
    id="datasource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
  >
    <property name="driverClassName">
      <value>org.hsqldb.jdbcDriver</value>
    </property>
    <property name="url">
      <value>jdbc:hsqldb:hsql://localhost/schemacrawler</value>
    </property>
    <property name="username">
      <value>sa</value>
    </property>
    <property name="password">
      <value></value>
    </property>
  </bean>

  <bean id="information_schema" class="java.util.HashMap">
    <constructor-arg>
        <map key-type="java.lang.String" value-type="java.lang.String">
          <entry key="select.INFORMATION_SCHEMA.ROUTINES">
            <value>
              <![CDATA[              
                  SELECT 
                    *
                  FROM 
                    INFORMATION_SCHEMA.ROUTINES 
                  ORDER BY 
                    ROUTINE_CATALOG, 
                    ROUTINE_SCHEMA, 
                    ROUTINE_NAME
                  ]]>
            </value>
          </entry>
          <entry key="select.INFORMATION_SCHEMA.VIEWS">
            <value>
              <![CDATA[
                  SELECT 
                    * 
                  FROM 
                    INFORMATION_SCHEMA.VIEWS 
                  ORDER BY 
                    TABLE_CATALOG, 
                    TABLE_SCHEMA, 
                    TABLE_NAME
                  ]]>
            </value>
          </entry>
          <entry key="select.INFORMATION_SCHEMA.TRIGGERS">
            <value>
              <![CDATA[
                  SELECT 
                    * 
                  FROM 
                    INFORMATION_SCHEMA.TRIGGERS
                  ORDER BY
                    TRIGGER_CATALOG,
                    TRIGGER_SCHEMA,
                    TRIGGER_NAME
                  ]]>
            </value>
          </entry>
          <entry key="select.INFORMATION_SCHEMA.TABLE_CONSTRAINTS">
            <value>
              <![CDATA[
                  SELECT 
                    * 
                  FROM 
                    INFORMATION_SCHEMA.TABLE_CONSTRAINTS
                  ORDER BY
                    CONSTRAINT_CATALOG,
                    CONSTRAINT_SCHEMA,
                    CONSTRAINT_NAME
                  ]]>
            </value>
          </entry>
          <entry key="select.INFORMATION_SCHEMA.EXT_TABLE_CONSTRAINTS">
            <value>
              <![CDATA[
                  SELECT 
                    * 
                  FROM 
                    INFORMATION_SCHEMA.CHECK_CONSTRAINTS
                  ORDER BY
                    CONSTRAINT_CATALOG,
                    CONSTRAINT_SCHEMA,
                    CONSTRAINT_NAME
                  ]]>
            </value>
          </entry>
          <entry key="select.INFORMATION_SCHEMA.SEQUENCES">
            <value>
              <![CDATA[              
                  SELECT 
                    *
                  FROM 
                    INFORMATION_SCHEMA.SEQUENCES 
                  ORDER BY 
                    SEQUENCE_CATALOG, 
                    SEQUENCE_SCHEMA, 
                    SEQUENCE_NAME
                  ]]>
            </value>
          </entry>    
        </map>
    </constructor-arg>
  </bean>

  <bean id="databaseSpecificOverrideOptionsBuilder"
        class="schemacrawler.schemacrawler.DatabaseSpecificOverrideOptionsBuilder">
     <constructor-arg ref="information_schema"/>
  </bean>
  <bean id="databaseSpecificOverrideOptions" 
        factory-bean="databaseSpecificOverrideOptionsBuilder"
        factory-method="toOptions" />
    
  <bean
    id="schemaCrawlerOptions"
    class="schemacrawler.schemacrawler.SchemaCrawlerOptions"
  >
    <property name="sequenceInclusionRule">
      <bean class="schemacrawler.schemacrawler.IncludeAll"/>
    </property>
    <property name="tableTypes">
      <set>
        <value>TABLE</value>
        <value>VIEW</value>
      </set>
    </property>
    <property name="schemaInfoLevel">
      <bean
        factory-method="maximum"
        class="schemacrawler.schemacrawler.SchemaInfoLevelBuilder" />
    </property>
  </bean>
  
  <bean id="outputOptions" class="schemacrawler.tools.options.OutputOptions">
    <constructor-arg name="outputFormatValue" value="text" />
    <constructor-arg>
      <bean id="outputFile" class="java.nio.file.Paths" factory-method="get">  
        <constructor-arg value="." />
        <constructor-arg value="scOutput.txt" />
      </bean>
    </constructor-arg>
  </bean>


  <bean
    id="executableForSchema"
    class="schemacrawler.tools.text.schema.SchemaTextExecutable"
  >
    <constructor-arg value="schema" />
    <property
      name="schemaCrawlerOptions"
      ref="schemaCrawlerOptions" />
    <property name="schemaTextOptions">
      <bean class="schemacrawler.tools.text.schema.SchemaTextOptions">
        <property
          name="showOrdinalNumbers"
          value="true" />
        <property
          name="showStandardColumnTypeNames"
          value="true" />
        <property
          name="hidePrimaryKeyNames"
          value="false" />
        <property
          name="hideIndexNames"
          value="false" />
        <property
          name="hideForeignKeyNames"
          value="false" />
        <property
          name="hideConstraintNames"
          value="false" />
        <property
          name="noInfo"
          value="true" />           
      </bean>
    </property>
    <property
      name="outputOptions"
      ref="outputOptions" />
  </bean>

  <bean
    id="executableForQuery"
    class="schemacrawler.tools.text.operation.OperationExecutable"
  >
    <constructor-arg value="select.tables" />
    <property
      name="schemaCrawlerOptions"
      ref="schemaCrawlerOptions" />
    <property name="operationOptions">
      <bean class="schemacrawler.tools.text.operation.OperationOptions">
        <property
          name="showLobs"
          value="true" />
                  <property
          name="noInfo"
          value="true" />
      </bean>
    </property>
    <property name="additionalConfiguration">
      <bean class="schemacrawler.schemacrawler.Config">
        <constructor-arg>
          <map>
            <entry
              key="select.tables"
              value="SELECT * FROM INFORMATION_SCHEMA.SYSTEM_TABLES" />
          </map>
        </constructor-arg>
      </bean>
    </property>
    <property
      name="outputOptions"
      ref="outputOptions" />
  </bean>

  <bean
    id="executableForQueryOver"
    class="schemacrawler.tools.text.operation.OperationExecutable"
  >
    <constructor-arg value="select" />
    <property
      name="schemaCrawlerOptions"
      ref="schemaCrawlerOptions" />
    <property name="operationOptions">
      <bean class="schemacrawler.tools.text.operation.OperationOptions">
        <property
          name="showLobs"
          value="true" />
        <property
          name="noInfo"
          value="true" />          
      </bean>
    </property>
    <property name="additionalConfiguration">
      <bean class="schemacrawler.schemacrawler.Config">
        <constructor-arg>
          <map>
            <entry
              key="select"
              value="SELECT * FROM ${table}" />
          </map>
        </constructor-arg>
      </bean>
    </property>
    <property
      name="outputOptions"
      ref="outputOptions" />
  </bean>

  <bean
    id="executableForCount"
    class="schemacrawler.tools.text.operation.OperationExecutable"
  >
    <constructor-arg value="count" />
    <property
      name="schemaCrawlerOptions"
      ref="schemaCrawlerOptions" />
    <property
      name="outputOptions"
      ref="outputOptions" />
    <property name="operationOptions">
      <bean class="schemacrawler.tools.text.operation.OperationOptions">
        <property
          name="noInfo"
          value="true" />          
      </bean>
    </property>      
  </bean>

  <bean
    id="executableForVelocity"
    class="schemacrawler.tools.executable.SchemaCrawlerExecutable"
  >
    <constructor-arg value="velocity" />
    <property
      name="schemaCrawlerOptions"
      ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property
          name="outputFormatValue"
          value="/plaintextschema.vm" />
      </bean>
    </property>
  </bean>

  <bean
    id="executableForFreeMarker"
    class="schemacrawler.tools.executable.SchemaCrawlerExecutable"
  >
    <constructor-arg value="freemarker" />
    <property
      name="schemaCrawlerOptions"
      ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property
          name="outputFormatValue"
          value="/plaintextschema.ftl" />
      </bean>
    </property>
  </bean>

  <bean
    id="executableForXMLSerialization"
    class="schemacrawler.tools.executable.SchemaCrawlerExecutable"
  >
    <constructor-arg value="serialize" />
    <property
      name="schemaCrawlerOptions"
      ref="schemaCrawlerOptions" />
    <property name="outputOptions">
      <bean class="schemacrawler.tools.options.OutputOptions">
        <property
          name="outputFormatValue"
          value="xml" />
      </bean>
    </property>
  </bean>

</beans>
